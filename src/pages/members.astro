---
import "@fontsource-variable/inter";
import Footer from "~/components/footer.astro";
import Header from "~/components/header.astro";
import ContentSection from "~/components/content-section.astro";
import MemberCard from "~/components/member_card.tsx";
import "~/styles/index.css";
import team from "~/content/members/team.json";
import members from "~/content/members/data.json";

const { generator, site } = Astro;
// const image = new URL("social.jpg", site);
const description =
  `SC-CSBS  welcomes you all  to the launch of our exciting new chapter which is designed to be a hub of creativity, collaboration and lifelong learning. 
  ðŸ‘‰Join us and discover your full potential!
  In academic pursuit we thrive
  A student chapter that's alive
  CSBS is our foundation
  A community of inspiration.
  Our passion is our guidingðŸŒŸ light
  As weðŸ«‚ strive with all our might
  To conquer academic heights
  With CSBS our ðŸ¦¾future's bright.`;

interface Result {
  gender: string;
  name: {
    title: string;
    first: string;
    last: string;
  };
  location: {
    street: {
      number: number;
      name: string;
    };
    city: string;
    state: string;
    country: string;
    postcode: number;
    coordinates: {
      latitude: string;
      longitude: string;
    };
    timezone: {
      offset: string;
      description: string;
    };
  };
  email: string;
  login: {
    uuid: string;
    username: string;
    password: string;
    salt: string;
    md5: string;
    sha1: string;
    sha256: string;
  };
  dob: {
    date: string;
    age: number;
  };
  registered: {
    date: string;
    age: number;
  };
  phone: string;
  cell: string;
  id: {
    name: string;
    value: null | string;
  };
  picture: {
    large: string;
    medium: string;
    thumbnail: string;
  };
  nat: string;
}

interface Info {
  seed: string;
  results: number;
  page: number;
  version: string;
}

interface RootObject {
  results: Result[];
  info: Info;
}

interface Member {
  title: string;
  github: string;
  linkedIn: string;
  image: string;
}

interface Data {
  members: Member[];
}

  // const members:RootObject = await fetch(
  //   "https://randomuser.me/api/?results=80"
  // ).then((res) => res.json());


---

<!doctype html>
<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <meta name="generator" content={generator} />

    <title>IEI Students' Chapter CSBS</title>
    <meta name="description" content={description} />

    <!-- social media -->
    <meta property="og:title" content="Astro" />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={description} />
    <!-- <meta property="og:image" content={image} /> -->
    <meta property="og:url" content={site} />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- initialize theme -->
    <script is:inline>
      const themeSaved = localStorage.getItem("theme");

      if (themeSaved) {
        document.documentElement.dataset.theme = themeSaved;
      } else {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches;
        document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
      }

      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (event) => {
          if (!localStorage.getItem("theme")) {
            document.documentElement.dataset.theme = event.matches
              ? "dark"
              : "light";
          }
        });
    </script>
  </head>
  <body
    class="h-full overflow-x-hidden  text-default text-base selection:bg-secondary selection:text-white"
  >
  <Header title="events" />
    <div class=" md:px-8 px-2 py-32">
      <ContentSection
        title="Team Leads and Co-Leads"
        id="team-leads"
        />
        <div class="flex flex-wrap  justify-center items-center">
          {team.team.map((member) => (
            <MemberCard
              username={member.title}
              img={member.image}
              pos={member.pos}
              gitHub={member.githubUrl}
              linkedIn={member.linkedInUrl}
              type="team"
              client:idle
              />
          ))}
        </div> 
        <div class="space-t-24  pt-32 ">
        <ContentSection
        title="Members"
        id="members"
        />
        <br/>
      <div class="flex flex-wrap justify-center items-center">
        
        {members.members.map((member) => (
          <MemberCard
            username={member.title}
            img={member.image}
            linkedIn={member.linkedIn}
            gitHub={member.github}
            type="member"
            client:idle
            />
        ))}
      </div>
    </div> 
    <Footer />
  </body>
</html>
